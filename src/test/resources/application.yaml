quarkus:
  qpid-jms:
    url: 'amqp://localhost:5672'
    username: 'nebulous'
    password: 'admin'

jms:
  topic:
    mock:
      inbound: 'jms.todo.inbound'
      report: 'jms.todo.report'
    nebulous:
      optimiser: 'eu.nebulouscloud.ui.dsl.generic'
      metric_model: 'eu.nebulouscloud.ui.dsl.metric_model'
      evaluator: 'eu.nebulouscloud.optimiser.utilityevaluator.performanceindicators'
      node_canditates_request_cfsb: 'eu.nebulouscloud.cfsb.get_node_candidates'
      node_canditates_request_sal: 'eu.nebulouscloud.exn.sal.nodecandidate.get'
      node_canditates_reply_sal: 'eu.nebulouscloud.exn.sal.nodecandidate.get.reply'
      node_canditates_reply_cfsb: 'eu.nebulouscloud.cfsb.get_node_candidates.reply'
      optimiser_define_cluster: 'eu.nebulouscloud.exn.sal.cluster.define'
      optimiser_deploy_cluster: 'eu.nebulouscloud.exn.sal.cluster.define'
#      optimiser_deploy_cluster: 'eu.nebulouscloud.exn.sal.cluster.define'


sal:
  api:
    url: '${SAL_API_URL:http://localhost:8080}'
    username: '${SAL_API_USER}'
    password: '${SAL_API_USER}'

app:
  ems:
    username: '${APP_EMS_USER}'
    password: '${APP_EMS_PASSWORD}'

docker:
  server: '${PRIVATE_DOCKER_REGISTRY_SERVER}'
  username: '${PRIVATE_DOCKER_REGISTRY_USERNAME}'
  password: '${PRIVATE_DOCKER_REGISTRY_PASSWORD}'
  email: '${PRIVATE_DOCKER_REGISTRY_EMAIL}'

onm_url: '${ONM_URL}'